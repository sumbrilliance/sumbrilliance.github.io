<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 夏四的博客</title>
    <link>https://sumbrilliance.github.io/post/</link>
    <description>Recent content in Posts on 夏四的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Jan 2019 10:58:08 -0400</lastBuildDate>
    
	<atom:link href="https://sumbrilliance.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 hugo 搭建github page 博客</title>
      <link>https://sumbrilliance.github.io/2019/01/%E4%BD%BF%E7%94%A8-hugo-%E6%90%AD%E5%BB%BAgithub-page-%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 09 Jan 2019 10:58:08 -0400</pubDate>
      
      <guid>https://sumbrilliance.github.io/2019/01/%E4%BD%BF%E7%94%A8-hugo-%E6%90%AD%E5%BB%BAgithub-page-%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;p&gt;之前使用的 jekyll 搭建的 github pages 博客，最近重新整理博客，决意迁移到 hugo。&lt;/p&gt;

&lt;p&gt;本文介绍了这个博客迁移的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>.pem、 .p12、cer 等文件的区别</title>
      <link>https://sumbrilliance.github.io/2018/12/.pem-.p12cer-%E7%AD%89%E6%96%87%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Tue, 25 Dec 2018 22:30:00 +0000</pubDate>
      
      <guid>https://sumbrilliance.github.io/2018/12/.pem-.p12cer-%E7%AD%89%E6%96%87%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>&lt;p&gt;本文根据SO上面的一个的回答，对CSR 、pem、crt、cer等文件格式进行解释。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>entitlements授权机制</title>
      <link>https://sumbrilliance.github.io/2017/04/entitlements%E6%8E%88%E6%9D%83%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sumbrilliance.github.io/2017/04/entitlements%E6%8E%88%E6%9D%83%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;p&gt;在对ipa重签名的时候，你可能会疑惑，为什么可以用别的证书重签之后，ipa就可以安装，又为什么在重签的时候需要加入 embedded.mobileprovision 文件，重签失败出现的闪退又是为什么。那么也许你需要深入了解 entitlements 的验证机制。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一次视频直播客户端逆向开发</title>
      <link>https://sumbrilliance.github.io/2016/05/%E4%B8%80%E6%AC%A1%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%80%86%E5%90%91%E5%BC%80%E5%8F%91/</link>
      <pubDate>Sun, 01 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sumbrilliance.github.io/2016/05/%E4%B8%80%E6%AC%A1%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%80%86%E5%90%91%E5%BC%80%E5%8F%91/</guid>
      <description>&lt;p&gt;本文原计划是一个系列中的首篇，结果懒癌一犯，无限跳票，但是毕竟是废了心血写的，此次迁移，也做了保留，如果能对有些朋友有所参考，那就再好不过。&lt;/p&gt;

&lt;p&gt;本文介绍的主要是逆向的第一步，对想要逆向的ipa文件砸壳（去掉外层的加密保护）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>通过数据线直接ssh登陆到iOS设备</title>
      <link>https://sumbrilliance.github.io/2016/05/%E9%80%9A%E8%BF%87%E6%95%B0%E6%8D%AE%E7%BA%BF%E7%9B%B4%E6%8E%A5ssh%E7%99%BB%E9%99%86%E5%88%B0ios%E8%AE%BE%E5%A4%87/</link>
      <pubDate>Sun, 01 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sumbrilliance.github.io/2016/05/%E9%80%9A%E8%BF%87%E6%95%B0%E6%8D%AE%E7%BA%BF%E7%9B%B4%E6%8E%A5ssh%E7%99%BB%E9%99%86%E5%88%B0ios%E8%AE%BE%E5%A4%87/</guid>
      <description>&lt;p&gt;小黄书《iOS逆向工程》介绍的使用usb连接 iOS设备的方式是使用 usbmuxd，但是这个方式还是不够快速便捷，本文介绍了几种更方便的连接思路。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>float 在内存中的表示</title>
      <link>https://sumbrilliance.github.io/2016/02/float-%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%A4%BA/</link>
      <pubDate>Sat, 06 Feb 2016 10:58:08 -0400</pubDate>
      
      <guid>https://sumbrilliance.github.io/2016/02/float-%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%A4%BA/</guid>
      <description>&lt;p&gt;从学c语言就一直都知道浮点数有单精度双精度，后者精度较高，使用64位存储，前者使用32位。然而没有进一步了解过。这次看计算机专业导论，介绍了浮点数的内部存储规则，总结记录一下.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>